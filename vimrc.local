Plugin 'thoughtbot/vim-rspec'
Plugin 'scrooloose/syntastic'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-dispatch'
Plugin 'tpope/vim-fugitive'
Plugin 'ConradIrwin/vim-bracketed-paste'
Plugin 'altercation/vim-colors-solarized'
Plugin 'mileszs/ack.vim'
Plugin 'schickling/vim-bufonly'
Plugin 'mtth/scratch.vim'

" Use ag instead of ack because ag.vim is abandoned
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" Press enter to unhighlight searches
nnoremap <CR> :noh<CR><CR>

" save with ,s
nnoremap <Leader>s :w<CR><CR>

" RSpec.vim mappings
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>r :call RunNearestSpec()<CR>
map <Leader>e :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

map <Leader>b :CtrlPBuffer<CR>
" Run rspec using thoughtbot/vim-rspec and tpope/dispatch.
let b:rspec_executable = "bundle exec rspec"
let g:rspec_command = "Dispatch " . b:rspec_executable . " {spec} --format=progress --no-color"
let g:syntastic_ruby_checkers = ['rubocop']

let g:scratch_persistence_file = '/Users/duncan/.vimscratch'

" Exclude quickfix buffers from :bn and :bp
augroup qf
  autocmd!
  autocmd FileType qf set nobuflisted
augroup END

" Toggle relative numbering with ,=
nmap <Leader>= :set rnu! rnu?<cr>

" Split to the right, and below, not to the left and above
set splitright
set splitbelow
